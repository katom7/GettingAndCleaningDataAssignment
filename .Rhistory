swirl()
install.packages("swirl")
library("swirl")
swirl()
swirl()
library("swirl")
swirl()
install_from_swirl("Getting and Cleaning Data")
install.packages("swirl")
install_from_swirl("Getting and Cleaning Data")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
read.csv(path2csv, stringsAsFactors = FALSE)
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran,
| ip_id, package, country)
select(cran, ip_id, package, country)
5:20
q()
a <- c("a","b","c")
b <- c("b","c","d")
dfa <- data.frame(c1=a)
dfb <- data.frame(c1=b)
merge(dfa,dfb,by=C1)
merge(dfa,dfb,by=c1)
dfa
dfb
merge(dfa,dfb,by.x=c1,by.y=c1)
merge(x = dfa,y = dfb,by.x=c1,by.y=c1)
merge(x = dfa,y = dfb)
library(dplyr)
merge(x = dfa,y = dfb)
merge(x = dfa,y = dfb, by.x="c1")
merge(x = dfa,y = dfb, by.x="c1", by,y="c1")
merge(x = dfa,y = dfb, by.x="c1", by.y="c1")
dfa <- cbind(dfa,c(1,2,3)
)
dfa
merge(x = dfa,y = dfb, by.x="c1", by.y="c1")
dfa <- rbind(dfa,dfa)
dfa
merge(x = dfa,y = dfb, by.x="c1", by.y="c1")
str(dfa)
merge(x = dfa,y = dfb, by.x="c1", by.y="c1", all=TRUE)
merge(x = dfa,y = dfb, by.x="c1", by.y="c1", all.x=TRUE)
merge(x = dfa,y = dfb, by.x="c1", by.y="c1", all.y=TRUE)
merge(x = dfa,y = dfb, by = null)
merge(x = dfa,y = dfb, by = NULL)
## use character columns of names to get sensible sort order
authors <- data.frame(
surname = I(c("Tukey", "Venables", "Tierney", "Ripley", "McNeil")),
nationality = c("US", "Australia", "US", "UK", "Australia"),
deceased = c("yes", rep("no", 4)))
books <- data.frame(
name = I(c("Tukey", "Venables", "Tierney",
"Ripley", "Ripley", "McNeil", "R Core")),
title = c("Exploratory Data Analysis",
"Modern Applied Statistics ...",
"LISP-STAT",
"Spatial Statistics", "Stochastic Simulation",
"Interactive Data Analysis",
"An Introduction to R"),
other.author = c(NA, "Ripley", NA, NA, NA, NA,
"Venables & Smith"))
(m1 <- merge(authors, books, by.x = "surname", by.y = "name"))
(m2 <- merge(books, authors, by.x = "name", by.y = "surname"))
stopifnot(as.character(m1[, 1]) == as.character(m2[, 1]),
all.equal(m1[, -1], m2[, -1][ names(m1)[-1] ]),
dim(merge(m1, m2, by = integer(0))) == c(36, 10))
## "R core" is missing from authors and appears only here :
merge(authors, books, by.x = "surname", by.y = "name", all = TRUE)
## example of using 'incomparables'
x <- data.frame(k1 = c(NA,NA,3,4,5), k2 = c(1,NA,NA,4,5), data = 1:5)
y <- data.frame(k1 = c(NA,2,NA,4,5), k2 = c(NA,NA,3,4,5), data = 1:5)
merge(x, y, by = c("k1","k2")) # NA's match
merge(x, y, by = "k1") # NA's match, so 6 rows
merge(x, y, by = "k2", incomparables = NA) # 2 rows
merge(x = dfa,y = dfb, by.x="c1", by.y="c1", incomparables = NA)
merge(x = dfa,y = dfb, by.x="c1", by.y="c1", incomparables = NULL)
b <- c("b","c","d")
a <- c("a","b","c")
b <- c("b","c","d")
dfa <- data.frame(c1=a)
dfb <- data.frame(c1=b)
merge(x = dfa,y = dfb, by.x="c1", by.y="c1", incomparables = NULL)
merge(x = dfa,y = dfb, by.x="c1", by.y="c1", incomparables = NA)
dfa
dfb
a <- c("a","b","c")
c <- c(1,2,3)
b <- c("b","c","d")
d <- c(2,3,4)
dfa <- data.frame(c1=a)
dfb <- data.frame(c1=b)
merge(x = dfa,y = dfb, by.x="c1", by.y="c1", incomparables = NA)
a <- c("a","b","c")
c <- c(1,2,3)
b <- c("b","c","d")
d <- c(2,3,4)
dfa <- data.frame(c1=a, c2=c)
dfb <- data.frame(c1=b, c2=d)
merge(x = dfa,y = dfb, by.x="c1", by.y="c1", incomparables = NA)
merge(x = dfa,y = dfb, by.x="c1", by.y="c1", incomparables = NULL)
a <- c("a","b","c")
c <- c(1,2,3)
b <- c("b","c","d")
d <- c(2,3,4)
dfa <- data.frame(c1=a, c2=c)
dfb <- data.frame(c1=b)
merge(x = dfa,y = dfb, by.x="c1", by.y="c1", incomparables = NULL)
merge(x = dfa,y = dfb, by.x="c1", by.y="c1", incomparables = NA)
merge(x = dfa,y = dfb, by.x="c1", by.y="c1", all = true)
merge(x = dfa,y = dfb, by.x="c1", by.y="c1", all = TRUE)
merge(x = dfa,y = dfb, by.x="c1", by.y="c1", all = TRUE,incompatibles=NA)
merge(x = dfa,y = dfb, by.x="c1", by.y="c1", all.x = TRUE,incompatibles=NA)
merge(x = dfa,y = dfb, by.x="c1", by.y="c1", all.x = TRUE,incompatibles=NULL)
a <- c("a","b","c")
c <- c(1,2,3)
b <- c("b","c","d")
d <- c(2,3,4)
dfa <- data.frame(c1=a, c2=c)
dfb <- data.frame(c1=b, c3=d)
merge(x = dfa,y = dfb, by.x="c1", by.y="c1", all.x = TRUE,incompatibles=NULL)
merge(x = dfa,y = dfb, by.x="c1", by.y="c1", all = TRUE,incompatibles=NULL)
merge(x = dfa,y = dfb, by.x="c1", by.y="c1", all = TRUE,incompatibles=NA)
merge(x = dfa,y = dfb, by.x="c1", by.y="c1", all.x = TRUE,incompatibles=NA)
merge(x = dfa,y = dfb, by.x="c1", by.y="c1",incompatibles=NA)
merge(x = dfa,y = dfb, by.x="c1", by.y="c1")
install.packages(c('rzmq','repr','IRkernel','IRdisplay'),
repos = c('http://irkernel.github.io/', getOption('repos')),
type = 'source')
IRkernel::installspec(user = FALSE)
quit()
getwd()
setwd("~/GitHub/GettingAndCleaningData")
ls()
rm(ls())
rm(list=ls(all=TRUE))
